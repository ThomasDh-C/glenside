(function() {var implementors = {};
implementors["codespan_reporting"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.59.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"termcolor/enum.ColorChoice.html\" title=\"enum termcolor::ColorChoice\">ColorChoice</a>&gt; for <a class=\"struct\" href=\"codespan_reporting/term/struct.ColorArg.html\" title=\"struct codespan_reporting::term::ColorArg\">ColorArg</a>","synthetic":false,"types":["codespan_reporting::term::ColorArg"]}];
implementors["either"] = [{"text":"impl&lt;L, R&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.59.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.59.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, L&gt;&gt; for <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;L, R&gt;","synthetic":false,"types":["either::Either"]}];
implementors["itertools"] = [{"text":"impl&lt;A, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.59.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.59.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"itertools/enum.Either.html\" title=\"enum itertools::Either\">Either</a>&lt;A, B&gt;&gt;&gt; for <a class=\"enum\" href=\"itertools/enum.EitherOrBoth.html\" title=\"enum itertools::EitherOrBoth\">EitherOrBoth</a>&lt;A, B&gt;","synthetic":false,"types":["itertools::either_or_both::EitherOrBoth"]}];
implementors["symbolic_expressions"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.59.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"symbolic_expressions/enum.Sexp.html\" title=\"enum symbolic_expressions::Sexp\">Sexp</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.59.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"symbolic_expressions/enum.Sexp.html\" title=\"enum symbolic_expressions::Sexp\">Sexp</a>&gt;","synthetic":false,"types":["alloc::vec::Vec"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.59.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"symbolic_expressions/enum.Sexp.html\" title=\"enum symbolic_expressions::Sexp\">Sexp</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.59.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>","synthetic":false,"types":["alloc::string::String"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.59.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"symbolic_expressions/enum.Sexp.html\" title=\"enum symbolic_expressions::Sexp\">Sexp</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.59.0/std/primitive.i64.html\">i64</a>","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.59.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"symbolic_expressions/enum.Sexp.html\" title=\"enum symbolic_expressions::Sexp\">Sexp</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.59.0/std/primitive.f64.html\">f64</a>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()